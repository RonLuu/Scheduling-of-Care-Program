name: Deploy to Staging

on:
  push:
    branches:
      - main

jobs:
  # Run tests first
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./client

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --run
        env:
          CI: true

      - name: Build
        run: npm run build
        env:
          CI: true

  # Deploy to staging after tests pass
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [test]
    if: success()

    environment:
      name: staging
      url: https://scheduling-of-care-staging.herokuapp.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku --version

      - name: Deploy to Heroku Staging
        uses: akhileshns/heroku-deploy@v3.14.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: scheduling-of-care-staging
          heroku_email: trongducnbk43@gmail.com
          dontautocreate: true

      - name: Staging Deployment Success
        run: |
          echo "âœ… Successfully deployed to staging!"
          echo "ðŸ”— Staging URL: https://scheduling-of-care-staging.herokuapp.com"
